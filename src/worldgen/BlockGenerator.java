package worldgen;

import util.QRandom;
import util.Vector;

/**
 * Generates a block of landmarks (sorta like a city's blocks).
 * Use getMap() to access the generation.
 * @author Quintin Harter
 *
 */
public class BlockGenerator {

	private boolean [] [] map;
	
	/**
	 * Constructor. Generates the map.
	 * @param blockSize the dimensions of each block
	 * @param rows the number of rows of blocks
	 * @param cols the number of columns of blocks
	 * @param pathWidth the width of each path
	 * @param probOfTrue the probability of each value in the block being true (probably 1)
	 */
	public BlockGenerator(Vector blockSize, int rows, int cols, int pathWidth, double probOfTrue) {
		map = new boolean [blockSize.getX() * cols + pathWidth * (blockSize.getX() - 1)][blockSize.getY() * rows + pathWidth * (blockSize.getY() - 1)];
		for (int xBlock = 0; xBlock < cols; xBlock++) {
			for (int yBlock = 0; yBlock < rows; yBlock++) {
				for (int sX = 0; sX < blockSize.getX(); sX++) {
					for (int sY = 0; sY < blockSize.getY(); sY++) {
						map[xBlock * (blockSize.getX() + pathWidth) + sX][yBlock * (blockSize.getY() + pathWidth) + sY] = QRandom.rollDie(probOfTrue);
					}
				}
			}
		}
	}
	
	/**
	 * Gets the map generated by this generator.
	 * @return the map generated. (true == in block)
	 */
	public boolean [] [] getMap() {
		return map;
	}
	
}
